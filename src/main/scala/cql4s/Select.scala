package cql4s

import cql4s.compiler.QueryCompiler
import cql4s.utils.{FindAll, NonEmptyListOfFields}


class Select[Keyspace, TableName, TableColumns, Fields, Where <: LogicalExpr](
  val table: Table[Keyspace, TableName, TableColumns],
  val fields: Fields,
  val where: Where,
  val allowFiltering: Boolean
):

  def compile[Input, Output](using compiler: QueryCompiler[this.type, Input, Output]): Query[Input, Output] =
    compiler.build(this)

  def take[NewFields](f: Selectable[TableColumns] => NewFields)(using NonEmptyListOfFields[NewFields]): Select[Keyspace, TableName, TableColumns, NewFields, Where] =
    Select(table, f(table), where, allowFiltering)

  def allowFiltering(allowed: Boolean): Select[Keyspace, TableName, TableColumns, Fields, Where] =
    Select(table, fields, where, allowed)

  def where[NewWhere <: LogicalExpr](f: Selectable[TableColumns] => NewWhere): Select[Keyspace, TableName, TableColumns, Fields, NewWhere] =
    Select(table, fields, f(table), allowFiltering)

  // todo: can a macro or inline generate this?
  def take[C1 <: Singleton, X](c1: C1)(using finder: FindAll[TableColumns, (C1), X]): Select[Keyspace, TableName, TableColumns, X, Where] = Select(table, finder.get(table.*), where, allowFiltering)
  def take[C1 <: Singleton, C2 <: Singleton, X](c1: C1, c2: C2)(using finder: FindAll[TableColumns, (C1, C2), X]): Select[Keyspace, TableName, TableColumns, X, Where] = Select(table, finder.get(table.*), where, allowFiltering)
  def take[C1 <: Singleton, C2 <: Singleton, C3 <: Singleton, X](c1: C1, c2: C2, c3: C3)(using finder: FindAll[TableColumns, (C1, C2, C3), X]): Select[Keyspace, TableName, TableColumns, X, Where] = Select(table, finder.get(table.*), where, allowFiltering)
  def take[C1 <: Singleton, C2 <: Singleton, C3 <: Singleton, C4 <: Singleton, X](c1: C1, c2: C2, c3: C3, c4: C4)(using finder: FindAll[TableColumns, (C1, C2, C3, C4), X]): Select[Keyspace, TableName, TableColumns, X, Where] = Select(table, finder.get(table.*), where, allowFiltering)
  def take[C1 <: Singleton, C2 <: Singleton, C3 <: Singleton, C4 <: Singleton, C5 <: Singleton, X](c1: C1, c2: C2, c3: C3, c4: C4, c5: C5)(using finder: FindAll[TableColumns, (C1, C2, C3, C4, C5), X]): Select[Keyspace, TableName, TableColumns, X, Where] = Select(table, finder.get(table.*), where, allowFiltering)
  def take[C1 <: Singleton, C2 <: Singleton, C3 <: Singleton, C4 <: Singleton, C5 <: Singleton, C6 <: Singleton, X](c1: C1, c2: C2, c3: C3, c4: C4, c5: C5, c6: C6)(using finder: FindAll[TableColumns, (C1, C2, C3, C4, C5, C6), X]): Select[Keyspace, TableName, TableColumns, X, Where] = Select(table, finder.get(table.*), where, allowFiltering)
  def take[C1 <: Singleton, C2 <: Singleton, C3 <: Singleton, C4 <: Singleton, C5 <: Singleton, C6 <: Singleton, C7 <: Singleton, X](c1: C1, c2: C2, c3: C3, c4: C4, c5: C5, c6: C6, c7: C7)(using finder: FindAll[TableColumns, (C1, C2, C3, C4, C5, C6, C7), X]): Select[Keyspace, TableName, TableColumns, X, Where] = Select(table, finder.get(table.*), where, allowFiltering)
  def take[C1 <: Singleton, C2 <: Singleton, C3 <: Singleton, C4 <: Singleton, C5 <: Singleton, C6 <: Singleton, C7 <: Singleton, C8 <: Singleton, X](c1: C1, c2: C2, c3: C3, c4: C4, c5: C5, c6: C6, c7: C7, c8: C8)(using finder: FindAll[TableColumns, (C1, C2, C3, C4, C5, C6, C7, C8), X]): Select[Keyspace, TableName, TableColumns, X, Where] = Select(table, finder.get(table.*), where, allowFiltering)
  def take[C1 <: Singleton, C2 <: Singleton, C3 <: Singleton, C4 <: Singleton, C5 <: Singleton, C6 <: Singleton, C7 <: Singleton, C8 <: Singleton, C9 <: Singleton, X](c1: C1, c2: C2, c3: C3, c4: C4, c5: C5, c6: C6, c7: C7, c8: C8, c9: C9)(using finder: FindAll[TableColumns, (C1, C2, C3, C4, C5, C6, C7, C8, C9), X]): Select[Keyspace, TableName, TableColumns, X, Where] = Select(table, finder.get(table.*), where, allowFiltering)
  def take[C1 <: Singleton, C2 <: Singleton, C3 <: Singleton, C4 <: Singleton, C5 <: Singleton, C6 <: Singleton, C7 <: Singleton, C8 <: Singleton, C9 <: Singleton, C10 <: Singleton, X](c1: C1, c2: C2, c3: C3, c4: C4, c5: C5, c6: C6, c7: C7, c8: C8, c9: C9, c10: C10)(using finder: FindAll[TableColumns, (C1, C2, C3, C4, C5, C6, C7, C8, C9, C10), X]): Select[Keyspace, TableName, TableColumns, X, Where] = Select(table, finder.get(table.*), where, allowFiltering)
  def take[C1 <: Singleton, C2 <: Singleton, C3 <: Singleton, C4 <: Singleton, C5 <: Singleton, C6 <: Singleton, C7 <: Singleton, C8 <: Singleton, C9 <: Singleton, C10 <: Singleton, C11 <: Singleton, X](c1: C1, c2: C2, c3: C3, c4: C4, c5: C5, c6: C6, c7: C7, c8: C8, c9: C9, c10: C10, c11: C11)(using finder: FindAll[TableColumns, (C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11), X]): Select[Keyspace, TableName, TableColumns, X, Where] = Select(table, finder.get(table.*), where, allowFiltering)
  def take[C1 <: Singleton, C2 <: Singleton, C3 <: Singleton, C4 <: Singleton, C5 <: Singleton, C6 <: Singleton, C7 <: Singleton, C8 <: Singleton, C9 <: Singleton, C10 <: Singleton, C11 <: Singleton, C12 <: Singleton, X](c1: C1, c2: C2, c3: C3, c4: C4, c5: C5, c6: C6, c7: C7, c8: C8, c9: C9, c10: C10, c11: C11, c12: C12)(using finder: FindAll[TableColumns, (C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12), X]): Select[Keyspace, TableName, TableColumns, X, Where] = Select(table, finder.get(table.*), where, allowFiltering)
  def take[C1 <: Singleton, C2 <: Singleton, C3 <: Singleton, C4 <: Singleton, C5 <: Singleton, C6 <: Singleton, C7 <: Singleton, C8 <: Singleton, C9 <: Singleton, C10 <: Singleton, C11 <: Singleton, C12 <: Singleton, C13 <: Singleton, X](c1: C1, c2: C2, c3: C3, c4: C4, c5: C5, c6: C6, c7: C7, c8: C8, c9: C9, c10: C10, c11: C11, c12: C12, c13: C13)(using finder: FindAll[TableColumns, (C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13), X]): Select[Keyspace, TableName, TableColumns, X, Where] = Select(table, finder.get(table.*), where, allowFiltering)
  def take[C1 <: Singleton, C2 <: Singleton, C3 <: Singleton, C4 <: Singleton, C5 <: Singleton, C6 <: Singleton, C7 <: Singleton, C8 <: Singleton, C9 <: Singleton, C10 <: Singleton, C11 <: Singleton, C12 <: Singleton, C13 <: Singleton, C14 <: Singleton, X](c1: C1, c2: C2, c3: C3, c4: C4, c5: C5, c6: C6, c7: C7, c8: C8, c9: C9, c10: C10, c11: C11, c12: C12, c13: C13, c14: C14)(using finder: FindAll[TableColumns, (C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14), X]): Select[Keyspace, TableName, TableColumns, X, Where] = Select(table, finder.get(table.*), where, allowFiltering)
  def take[C1 <: Singleton, C2 <: Singleton, C3 <: Singleton, C4 <: Singleton, C5 <: Singleton, C6 <: Singleton, C7 <: Singleton, C8 <: Singleton, C9 <: Singleton, C10 <: Singleton, C11 <: Singleton, C12 <: Singleton, C13 <: Singleton, C14 <: Singleton, C15 <: Singleton, X](c1: C1, c2: C2, c3: C3, c4: C4, c5: C5, c6: C6, c7: C7, c8: C8, c9: C9, c10: C10, c11: C11, c12: C12, c13: C13, c14: C14, c15: C15)(using finder: FindAll[TableColumns, (C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15), X]): Select[Keyspace, TableName, TableColumns, X, Where] = Select(table, finder.get(table.*), where, allowFiltering)
  def take[C1 <: Singleton, C2 <: Singleton, C3 <: Singleton, C4 <: Singleton, C5 <: Singleton, C6 <: Singleton, C7 <: Singleton, C8 <: Singleton, C9 <: Singleton, C10 <: Singleton, C11 <: Singleton, C12 <: Singleton, C13 <: Singleton, C14 <: Singleton, C15 <: Singleton, C16 <: Singleton, X](c1: C1, c2: C2, c3: C3, c4: C4, c5: C5, c6: C6, c7: C7, c8: C8, c9: C9, c10: C10, c11: C11, c12: C12, c13: C13, c14: C14, c15: C15, c16: C16)(using finder: FindAll[TableColumns, (C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16), X]): Select[Keyspace, TableName, TableColumns, X, Where] = Select(table, finder.get(table.*), where, allowFiltering)
  def take[C1 <: Singleton, C2 <: Singleton, C3 <: Singleton, C4 <: Singleton, C5 <: Singleton, C6 <: Singleton, C7 <: Singleton, C8 <: Singleton, C9 <: Singleton, C10 <: Singleton, C11 <: Singleton, C12 <: Singleton, C13 <: Singleton, C14 <: Singleton, C15 <: Singleton, C16 <: Singleton, C17 <: Singleton, X](c1: C1, c2: C2, c3: C3, c4: C4, c5: C5, c6: C6, c7: C7, c8: C8, c9: C9, c10: C10, c11: C11, c12: C12, c13: C13, c14: C14, c15: C15, c16: C16, c17: C17)(using finder: FindAll[TableColumns, (C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17), X]): Select[Keyspace, TableName, TableColumns, X, Where] = Select(table, finder.get(table.*), where, allowFiltering)
  def take[C1 <: Singleton, C2 <: Singleton, C3 <: Singleton, C4 <: Singleton, C5 <: Singleton, C6 <: Singleton, C7 <: Singleton, C8 <: Singleton, C9 <: Singleton, C10 <: Singleton, C11 <: Singleton, C12 <: Singleton, C13 <: Singleton, C14 <: Singleton, C15 <: Singleton, C16 <: Singleton, C17 <: Singleton, C18 <: Singleton, X](c1: C1, c2: C2, c3: C3, c4: C4, c5: C5, c6: C6, c7: C7, c8: C8, c9: C9, c10: C10, c11: C11, c12: C12, c13: C13, c14: C14, c15: C15, c16: C16, c17: C17, c18: C18)(using finder: FindAll[TableColumns, (C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18), X]): Select[Keyspace, TableName, TableColumns, X, Where] = Select(table, finder.get(table.*), where, allowFiltering)
  def take[C1 <: Singleton, C2 <: Singleton, C3 <: Singleton, C4 <: Singleton, C5 <: Singleton, C6 <: Singleton, C7 <: Singleton, C8 <: Singleton, C9 <: Singleton, C10 <: Singleton, C11 <: Singleton, C12 <: Singleton, C13 <: Singleton, C14 <: Singleton, C15 <: Singleton, C16 <: Singleton, C17 <: Singleton, C18 <: Singleton, C19 <: Singleton, X](c1: C1, c2: C2, c3: C3, c4: C4, c5: C5, c6: C6, c7: C7, c8: C8, c9: C9, c10: C10, c11: C11, c12: C12, c13: C13, c14: C14, c15: C15, c16: C16, c17: C17, c18: C18, c19: C19)(using finder: FindAll[TableColumns, (C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19), X]): Select[Keyspace, TableName, TableColumns, X, Where] = Select(table, finder.get(table.*), where, allowFiltering)
  def take[C1 <: Singleton, C2 <: Singleton, C3 <: Singleton, C4 <: Singleton, C5 <: Singleton, C6 <: Singleton, C7 <: Singleton, C8 <: Singleton, C9 <: Singleton, C10 <: Singleton, C11 <: Singleton, C12 <: Singleton, C13 <: Singleton, C14 <: Singleton, C15 <: Singleton, C16 <: Singleton, C17 <: Singleton, C18 <: Singleton, C19 <: Singleton, C20 <: Singleton, X](c1: C1, c2: C2, c3: C3, c4: C4, c5: C5, c6: C6, c7: C7, c8: C8, c9: C9, c10: C10, c11: C11, c12: C12, c13: C13, c14: C14, c15: C15, c16: C16, c17: C17, c18: C18, c19: C19, c20: C20)(using finder: FindAll[TableColumns, (C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20), X]): Select[Keyspace, TableName, TableColumns, X, Where] = Select(table, finder.get(table.*), where, allowFiltering)
  def take[C1 <: Singleton, C2 <: Singleton, C3 <: Singleton, C4 <: Singleton, C5 <: Singleton, C6 <: Singleton, C7 <: Singleton, C8 <: Singleton, C9 <: Singleton, C10 <: Singleton, C11 <: Singleton, C12 <: Singleton, C13 <: Singleton, C14 <: Singleton, C15 <: Singleton, C16 <: Singleton, C17 <: Singleton, C18 <: Singleton, C19 <: Singleton, C20 <: Singleton, C21 <: Singleton, X](c1: C1, c2: C2, c3: C3, c4: C4, c5: C5, c6: C6, c7: C7, c8: C8, c9: C9, c10: C10, c11: C11, c12: C12, c13: C13, c14: C14, c15: C15, c16: C16, c17: C17, c18: C18, c19: C19, c20: C20, c21: C21)(using finder: FindAll[TableColumns, (C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21), X]): Select[Keyspace, TableName, TableColumns, X, Where] = Select(table, finder.get(table.*), where, allowFiltering)
  def take[C1 <: Singleton, C2 <: Singleton, C3 <: Singleton, C4 <: Singleton, C5 <: Singleton, C6 <: Singleton, C7 <: Singleton, C8 <: Singleton, C9 <: Singleton, C10 <: Singleton, C11 <: Singleton, C12 <: Singleton, C13 <: Singleton, C14 <: Singleton, C15 <: Singleton, C16 <: Singleton, C17 <: Singleton, C18 <: Singleton, C19 <: Singleton, C20 <: Singleton, C21 <: Singleton, C22 <: Singleton, X](c1: C1, c2: C2, c3: C3, c4: C4, c5: C5, c6: C6, c7: C7, c8: C8, c9: C9, c10: C10, c11: C11, c12: C12, c13: C13, c14: C14, c15: C15, c16: C16, c17: C17, c18: C18, c19: C19, c20: C20, c21: C21, c22: C22)(using finder: FindAll[TableColumns, (C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22), X]): Select[Keyspace, TableName, TableColumns, X, Where] = Select(table, finder.get(table.*), where, allowFiltering)
  def take[C1 <: Singleton, C2 <: Singleton, C3 <: Singleton, C4 <: Singleton, C5 <: Singleton, C6 <: Singleton, C7 <: Singleton, C8 <: Singleton, C9 <: Singleton, C10 <: Singleton, C11 <: Singleton, C12 <: Singleton, C13 <: Singleton, C14 <: Singleton, C15 <: Singleton, C16 <: Singleton, C17 <: Singleton, C18 <: Singleton, C19 <: Singleton, C20 <: Singleton, C21 <: Singleton, C22 <: Singleton, C23 <: Singleton, X](c1: C1, c2: C2, c3: C3, c4: C4, c5: C5, c6: C6, c7: C7, c8: C8, c9: C9, c10: C10, c11: C11, c12: C12, c13: C13, c14: C14, c15: C15, c16: C16, c17: C17, c18: C18, c19: C19, c20: C20, c21: C21, c22: C22, c23: C23)(using finder: FindAll[TableColumns, (C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23), X]): Select[Keyspace, TableName, TableColumns, X, Where] = Select(table, finder.get(table.*), where, allowFiltering)
  def take[C1 <: Singleton, C2 <: Singleton, C3 <: Singleton, C4 <: Singleton, C5 <: Singleton, C6 <: Singleton, C7 <: Singleton, C8 <: Singleton, C9 <: Singleton, C10 <: Singleton, C11 <: Singleton, C12 <: Singleton, C13 <: Singleton, C14 <: Singleton, C15 <: Singleton, C16 <: Singleton, C17 <: Singleton, C18 <: Singleton, C19 <: Singleton, C20 <: Singleton, C21 <: Singleton, C22 <: Singleton, C23 <: Singleton, C24 <: Singleton, X](c1: C1, c2: C2, c3: C3, c4: C4, c5: C5, c6: C6, c7: C7, c8: C8, c9: C9, c10: C10, c11: C11, c12: C12, c13: C13, c14: C14, c15: C15, c16: C16, c17: C17, c18: C18, c19: C19, c20: C20, c21: C21, c22: C22, c23: C23, c24: C24)(using finder: FindAll[TableColumns, (C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24), X]): Select[Keyspace, TableName, TableColumns, X, Where] = Select(table, finder.get(table.*), where, allowFiltering)
  def take[C1 <: Singleton, C2 <: Singleton, C3 <: Singleton, C4 <: Singleton, C5 <: Singleton, C6 <: Singleton, C7 <: Singleton, C8 <: Singleton, C9 <: Singleton, C10 <: Singleton, C11 <: Singleton, C12 <: Singleton, C13 <: Singleton, C14 <: Singleton, C15 <: Singleton, C16 <: Singleton, C17 <: Singleton, C18 <: Singleton, C19 <: Singleton, C20 <: Singleton, C21 <: Singleton, C22 <: Singleton, C23 <: Singleton, C24 <: Singleton, C25 <: Singleton, X](c1: C1, c2: C2, c3: C3, c4: C4, c5: C5, c6: C6, c7: C7, c8: C8, c9: C9, c10: C10, c11: C11, c12: C12, c13: C13, c14: C14, c15: C15, c16: C16, c17: C17, c18: C18, c19: C19, c20: C20, c21: C21, c22: C22, c23: C23, c24: C24, c25: C25)(using finder: FindAll[TableColumns, (C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25), X]): Select[Keyspace, TableName, TableColumns, X, Where] = Select(table, finder.get(table.*), where, allowFiltering)
  def take[C1 <: Singleton, C2 <: Singleton, C3 <: Singleton, C4 <: Singleton, C5 <: Singleton, C6 <: Singleton, C7 <: Singleton, C8 <: Singleton, C9 <: Singleton, C10 <: Singleton, C11 <: Singleton, C12 <: Singleton, C13 <: Singleton, C14 <: Singleton, C15 <: Singleton, C16 <: Singleton, C17 <: Singleton, C18 <: Singleton, C19 <: Singleton, C20 <: Singleton, C21 <: Singleton, C22 <: Singleton, C23 <: Singleton, C24 <: Singleton, C25 <: Singleton, C26 <: Singleton, X](c1: C1, c2: C2, c3: C3, c4: C4, c5: C5, c6: C6, c7: C7, c8: C8, c9: C9, c10: C10, c11: C11, c12: C12, c13: C13, c14: C14, c15: C15, c16: C16, c17: C17, c18: C18, c19: C19, c20: C20, c21: C21, c22: C22, c23: C23, c24: C24, c25: C25, c26: C26)(using finder: FindAll[TableColumns, (C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26), X]): Select[Keyspace, TableName, TableColumns, X, Where] = Select(table, finder.get(table.*), where, allowFiltering)
  def take[C1 <: Singleton, C2 <: Singleton, C3 <: Singleton, C4 <: Singleton, C5 <: Singleton, C6 <: Singleton, C7 <: Singleton, C8 <: Singleton, C9 <: Singleton, C10 <: Singleton, C11 <: Singleton, C12 <: Singleton, C13 <: Singleton, C14 <: Singleton, C15 <: Singleton, C16 <: Singleton, C17 <: Singleton, C18 <: Singleton, C19 <: Singleton, C20 <: Singleton, C21 <: Singleton, C22 <: Singleton, C23 <: Singleton, C24 <: Singleton, C25 <: Singleton, C26 <: Singleton, C27 <: Singleton, X](c1: C1, c2: C2, c3: C3, c4: C4, c5: C5, c6: C6, c7: C7, c8: C8, c9: C9, c10: C10, c11: C11, c12: C12, c13: C13, c14: C14, c15: C15, c16: C16, c17: C17, c18: C18, c19: C19, c20: C20, c21: C21, c22: C22, c23: C23, c24: C24, c25: C25, c26: C26, c27: C27)(using finder: FindAll[TableColumns, (C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27), X]): Select[Keyspace, TableName, TableColumns, X, Where] = Select(table, finder.get(table.*), where, allowFiltering)
  def take[C1 <: Singleton, C2 <: Singleton, C3 <: Singleton, C4 <: Singleton, C5 <: Singleton, C6 <: Singleton, C7 <: Singleton, C8 <: Singleton, C9 <: Singleton, C10 <: Singleton, C11 <: Singleton, C12 <: Singleton, C13 <: Singleton, C14 <: Singleton, C15 <: Singleton, C16 <: Singleton, C17 <: Singleton, C18 <: Singleton, C19 <: Singleton, C20 <: Singleton, C21 <: Singleton, C22 <: Singleton, C23 <: Singleton, C24 <: Singleton, C25 <: Singleton, C26 <: Singleton, C27 <: Singleton, C28 <: Singleton, X](c1: C1, c2: C2, c3: C3, c4: C4, c5: C5, c6: C6, c7: C7, c8: C8, c9: C9, c10: C10, c11: C11, c12: C12, c13: C13, c14: C14, c15: C15, c16: C16, c17: C17, c18: C18, c19: C19, c20: C20, c21: C21, c22: C22, c23: C23, c24: C24, c25: C25, c26: C26, c27: C27, c28: C28)(using finder: FindAll[TableColumns, (C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27, C28), X]): Select[Keyspace, TableName, TableColumns, X, Where] = Select(table, finder.get(table.*), where, allowFiltering)
  def take[C1 <: Singleton, C2 <: Singleton, C3 <: Singleton, C4 <: Singleton, C5 <: Singleton, C6 <: Singleton, C7 <: Singleton, C8 <: Singleton, C9 <: Singleton, C10 <: Singleton, C11 <: Singleton, C12 <: Singleton, C13 <: Singleton, C14 <: Singleton, C15 <: Singleton, C16 <: Singleton, C17 <: Singleton, C18 <: Singleton, C19 <: Singleton, C20 <: Singleton, C21 <: Singleton, C22 <: Singleton, C23 <: Singleton, C24 <: Singleton, C25 <: Singleton, C26 <: Singleton, C27 <: Singleton, C28 <: Singleton, C29 <: Singleton, X](c1: C1, c2: C2, c3: C3, c4: C4, c5: C5, c6: C6, c7: C7, c8: C8, c9: C9, c10: C10, c11: C11, c12: C12, c13: C13, c14: C14, c15: C15, c16: C16, c17: C17, c18: C18, c19: C19, c20: C20, c21: C21, c22: C22, c23: C23, c24: C24, c25: C25, c26: C26, c27: C27, c28: C28, c29: C29)(using finder: FindAll[TableColumns, (C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27, C28, C29), X]): Select[Keyspace, TableName, TableColumns, X, Where] = Select(table, finder.get(table.*), where, allowFiltering)
  def take[C1 <: Singleton, C2 <: Singleton, C3 <: Singleton, C4 <: Singleton, C5 <: Singleton, C6 <: Singleton, C7 <: Singleton, C8 <: Singleton, C9 <: Singleton, C10 <: Singleton, C11 <: Singleton, C12 <: Singleton, C13 <: Singleton, C14 <: Singleton, C15 <: Singleton, C16 <: Singleton, C17 <: Singleton, C18 <: Singleton, C19 <: Singleton, C20 <: Singleton, C21 <: Singleton, C22 <: Singleton, C23 <: Singleton, C24 <: Singleton, C25 <: Singleton, C26 <: Singleton, C27 <: Singleton, C28 <: Singleton, C29 <: Singleton, C30 <: Singleton, X](c1: C1, c2: C2, c3: C3, c4: C4, c5: C5, c6: C6, c7: C7, c8: C8, c9: C9, c10: C10, c11: C11, c12: C12, c13: C13, c14: C14, c15: C15, c16: C16, c17: C17, c18: C18, c19: C19, c20: C20, c21: C21, c22: C22, c23: C23, c24: C24, c25: C25, c26: C26, c27: C27, c28: C28, c29: C29, c30: C30)(using finder: FindAll[TableColumns, (C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27, C28, C29, C30), X]): Select[Keyspace, TableName, TableColumns, X, Where] = Select(table, finder.get(table.*), where, allowFiltering)
  def take[C1 <: Singleton, C2 <: Singleton, C3 <: Singleton, C4 <: Singleton, C5 <: Singleton, C6 <: Singleton, C7 <: Singleton, C8 <: Singleton, C9 <: Singleton, C10 <: Singleton, C11 <: Singleton, C12 <: Singleton, C13 <: Singleton, C14 <: Singleton, C15 <: Singleton, C16 <: Singleton, C17 <: Singleton, C18 <: Singleton, C19 <: Singleton, C20 <: Singleton, C21 <: Singleton, C22 <: Singleton, C23 <: Singleton, C24 <: Singleton, C25 <: Singleton, C26 <: Singleton, C27 <: Singleton, C28 <: Singleton, C29 <: Singleton, C30 <: Singleton, C31 <: Singleton, X](c1: C1, c2: C2, c3: C3, c4: C4, c5: C5, c6: C6, c7: C7, c8: C8, c9: C9, c10: C10, c11: C11, c12: C12, c13: C13, c14: C14, c15: C15, c16: C16, c17: C17, c18: C18, c19: C19, c20: C20, c21: C21, c22: C22, c23: C23, c24: C24, c25: C25, c26: C26, c27: C27, c28: C28, c29: C29, c30: C30, c31: C31)(using finder: FindAll[TableColumns, (C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27, C28, C29, C30, C31), X]): Select[Keyspace, TableName, TableColumns, X, Where] = Select(table, finder.get(table.*), where, allowFiltering)
  def take[C1 <: Singleton, C2 <: Singleton, C3 <: Singleton, C4 <: Singleton, C5 <: Singleton, C6 <: Singleton, C7 <: Singleton, C8 <: Singleton, C9 <: Singleton, C10 <: Singleton, C11 <: Singleton, C12 <: Singleton, C13 <: Singleton, C14 <: Singleton, C15 <: Singleton, C16 <: Singleton, C17 <: Singleton, C18 <: Singleton, C19 <: Singleton, C20 <: Singleton, C21 <: Singleton, C22 <: Singleton, C23 <: Singleton, C24 <: Singleton, C25 <: Singleton, C26 <: Singleton, C27 <: Singleton, C28 <: Singleton, C29 <: Singleton, C30 <: Singleton, C31 <: Singleton, C32 <: Singleton, X](c1: C1, c2: C2, c3: C3, c4: C4, c5: C5, c6: C6, c7: C7, c8: C8, c9: C9, c10: C10, c11: C11, c12: C12, c13: C13, c14: C14, c15: C15, c16: C16, c17: C17, c18: C18, c19: C19, c20: C20, c21: C21, c22: C22, c23: C23, c24: C24, c25: C25, c26: C26, c27: C27, c28: C28, c29: C29, c30: C30, c31: C31, c32: C32)(using finder: FindAll[TableColumns, (C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27, C28, C29, C30, C31, C32), X]): Select[Keyspace, TableName, TableColumns, X, Where] = Select(table, finder.get(table.*), where, allowFiltering)
  def take[C1 <: Singleton, C2 <: Singleton, C3 <: Singleton, C4 <: Singleton, C5 <: Singleton, C6 <: Singleton, C7 <: Singleton, C8 <: Singleton, C9 <: Singleton, C10 <: Singleton, C11 <: Singleton, C12 <: Singleton, C13 <: Singleton, C14 <: Singleton, C15 <: Singleton, C16 <: Singleton, C17 <: Singleton, C18 <: Singleton, C19 <: Singleton, C20 <: Singleton, C21 <: Singleton, C22 <: Singleton, C23 <: Singleton, C24 <: Singleton, C25 <: Singleton, C26 <: Singleton, C27 <: Singleton, C28 <: Singleton, C29 <: Singleton, C30 <: Singleton, C31 <: Singleton, C32 <: Singleton, C33 <: Singleton, X](c1: C1, c2: C2, c3: C3, c4: C4, c5: C5, c6: C6, c7: C7, c8: C8, c9: C9, c10: C10, c11: C11, c12: C12, c13: C13, c14: C14, c15: C15, c16: C16, c17: C17, c18: C18, c19: C19, c20: C20, c21: C21, c22: C22, c23: C23, c24: C24, c25: C25, c26: C26, c27: C27, c28: C28, c29: C29, c30: C30, c31: C31, c32: C32, c33: C33)(using finder: FindAll[TableColumns, (C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27, C28, C29, C30, C31, C32, C33), X]): Select[Keyspace, TableName, TableColumns, X, Where] = Select(table, finder.get(table.*), where, allowFiltering)
  def take[C1 <: Singleton, C2 <: Singleton, C3 <: Singleton, C4 <: Singleton, C5 <: Singleton, C6 <: Singleton, C7 <: Singleton, C8 <: Singleton, C9 <: Singleton, C10 <: Singleton, C11 <: Singleton, C12 <: Singleton, C13 <: Singleton, C14 <: Singleton, C15 <: Singleton, C16 <: Singleton, C17 <: Singleton, C18 <: Singleton, C19 <: Singleton, C20 <: Singleton, C21 <: Singleton, C22 <: Singleton, C23 <: Singleton, C24 <: Singleton, C25 <: Singleton, C26 <: Singleton, C27 <: Singleton, C28 <: Singleton, C29 <: Singleton, C30 <: Singleton, C31 <: Singleton, C32 <: Singleton, C33 <: Singleton, C34 <: Singleton, X](c1: C1, c2: C2, c3: C3, c4: C4, c5: C5, c6: C6, c7: C7, c8: C8, c9: C9, c10: C10, c11: C11, c12: C12, c13: C13, c14: C14, c15: C15, c16: C16, c17: C17, c18: C18, c19: C19, c20: C20, c21: C21, c22: C22, c23: C23, c24: C24, c25: C25, c26: C26, c27: C27, c28: C28, c29: C29, c30: C30, c31: C31, c32: C32, c33: C33, c34: C34)(using finder: FindAll[TableColumns, (C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27, C28, C29, C30, C31, C32, C33, C34), X]): Select[Keyspace, TableName, TableColumns, X, Where] = Select(table, finder.get(table.*), where, allowFiltering)
  def take[C1 <: Singleton, C2 <: Singleton, C3 <: Singleton, C4 <: Singleton, C5 <: Singleton, C6 <: Singleton, C7 <: Singleton, C8 <: Singleton, C9 <: Singleton, C10 <: Singleton, C11 <: Singleton, C12 <: Singleton, C13 <: Singleton, C14 <: Singleton, C15 <: Singleton, C16 <: Singleton, C17 <: Singleton, C18 <: Singleton, C19 <: Singleton, C20 <: Singleton, C21 <: Singleton, C22 <: Singleton, C23 <: Singleton, C24 <: Singleton, C25 <: Singleton, C26 <: Singleton, C27 <: Singleton, C28 <: Singleton, C29 <: Singleton, C30 <: Singleton, C31 <: Singleton, C32 <: Singleton, C33 <: Singleton, C34 <: Singleton, C35 <: Singleton, X](c1: C1, c2: C2, c3: C3, c4: C4, c5: C5, c6: C6, c7: C7, c8: C8, c9: C9, c10: C10, c11: C11, c12: C12, c13: C13, c14: C14, c15: C15, c16: C16, c17: C17, c18: C18, c19: C19, c20: C20, c21: C21, c22: C22, c23: C23, c24: C24, c25: C25, c26: C26, c27: C27, c28: C28, c29: C29, c30: C30, c31: C31, c32: C32, c33: C33, c34: C34, c35: C35)(using finder: FindAll[TableColumns, (C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27, C28, C29, C30, C31, C32, C33, C34, C35), X]): Select[Keyspace, TableName, TableColumns, X, Where] = Select(table, finder.get(table.*), where, allowFiltering)
  def take[C1 <: Singleton, C2 <: Singleton, C3 <: Singleton, C4 <: Singleton, C5 <: Singleton, C6 <: Singleton, C7 <: Singleton, C8 <: Singleton, C9 <: Singleton, C10 <: Singleton, C11 <: Singleton, C12 <: Singleton, C13 <: Singleton, C14 <: Singleton, C15 <: Singleton, C16 <: Singleton, C17 <: Singleton, C18 <: Singleton, C19 <: Singleton, C20 <: Singleton, C21 <: Singleton, C22 <: Singleton, C23 <: Singleton, C24 <: Singleton, C25 <: Singleton, C26 <: Singleton, C27 <: Singleton, C28 <: Singleton, C29 <: Singleton, C30 <: Singleton, C31 <: Singleton, C32 <: Singleton, C33 <: Singleton, C34 <: Singleton, C35 <: Singleton, C36 <: Singleton, X](c1: C1, c2: C2, c3: C3, c4: C4, c5: C5, c6: C6, c7: C7, c8: C8, c9: C9, c10: C10, c11: C11, c12: C12, c13: C13, c14: C14, c15: C15, c16: C16, c17: C17, c18: C18, c19: C19, c20: C20, c21: C21, c22: C22, c23: C23, c24: C24, c25: C25, c26: C26, c27: C27, c28: C28, c29: C29, c30: C30, c31: C31, c32: C32, c33: C33, c34: C34, c35: C35, c36: C36)(using finder: FindAll[TableColumns, (C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27, C28, C29, C30, C31, C32, C33, C34, C35, C36), X]): Select[Keyspace, TableName, TableColumns, X, Where] = Select(table, finder.get(table.*), where, allowFiltering)
  def take[C1 <: Singleton, C2 <: Singleton, C3 <: Singleton, C4 <: Singleton, C5 <: Singleton, C6 <: Singleton, C7 <: Singleton, C8 <: Singleton, C9 <: Singleton, C10 <: Singleton, C11 <: Singleton, C12 <: Singleton, C13 <: Singleton, C14 <: Singleton, C15 <: Singleton, C16 <: Singleton, C17 <: Singleton, C18 <: Singleton, C19 <: Singleton, C20 <: Singleton, C21 <: Singleton, C22 <: Singleton, C23 <: Singleton, C24 <: Singleton, C25 <: Singleton, C26 <: Singleton, C27 <: Singleton, C28 <: Singleton, C29 <: Singleton, C30 <: Singleton, C31 <: Singleton, C32 <: Singleton, C33 <: Singleton, C34 <: Singleton, C35 <: Singleton, C36 <: Singleton, C37 <: Singleton, X](c1: C1, c2: C2, c3: C3, c4: C4, c5: C5, c6: C6, c7: C7, c8: C8, c9: C9, c10: C10, c11: C11, c12: C12, c13: C13, c14: C14, c15: C15, c16: C16, c17: C17, c18: C18, c19: C19, c20: C20, c21: C21, c22: C22, c23: C23, c24: C24, c25: C25, c26: C26, c27: C27, c28: C28, c29: C29, c30: C30, c31: C31, c32: C32, c33: C33, c34: C34, c35: C35, c36: C36, c37: C37)(using finder: FindAll[TableColumns, (C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27, C28, C29, C30, C31, C32, C33, C34, C35, C36, C37), X]): Select[Keyspace, TableName, TableColumns, X, Where] = Select(table, finder.get(table.*), where, allowFiltering)
  def take[C1 <: Singleton, C2 <: Singleton, C3 <: Singleton, C4 <: Singleton, C5 <: Singleton, C6 <: Singleton, C7 <: Singleton, C8 <: Singleton, C9 <: Singleton, C10 <: Singleton, C11 <: Singleton, C12 <: Singleton, C13 <: Singleton, C14 <: Singleton, C15 <: Singleton, C16 <: Singleton, C17 <: Singleton, C18 <: Singleton, C19 <: Singleton, C20 <: Singleton, C21 <: Singleton, C22 <: Singleton, C23 <: Singleton, C24 <: Singleton, C25 <: Singleton, C26 <: Singleton, C27 <: Singleton, C28 <: Singleton, C29 <: Singleton, C30 <: Singleton, C31 <: Singleton, C32 <: Singleton, C33 <: Singleton, C34 <: Singleton, C35 <: Singleton, C36 <: Singleton, C37 <: Singleton, C38 <: Singleton, X](c1: C1, c2: C2, c3: C3, c4: C4, c5: C5, c6: C6, c7: C7, c8: C8, c9: C9, c10: C10, c11: C11, c12: C12, c13: C13, c14: C14, c15: C15, c16: C16, c17: C17, c18: C18, c19: C19, c20: C20, c21: C21, c22: C22, c23: C23, c24: C24, c25: C25, c26: C26, c27: C27, c28: C28, c29: C29, c30: C30, c31: C31, c32: C32, c33: C33, c34: C34, c35: C35, c36: C36, c37: C37, c38: C38)(using finder: FindAll[TableColumns, (C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27, C28, C29, C30, C31, C32, C33, C34, C35, C36, C37, C38), X]): Select[Keyspace, TableName, TableColumns, X, Where] = Select(table, finder.get(table.*), where, allowFiltering)
  def take[C1 <: Singleton, C2 <: Singleton, C3 <: Singleton, C4 <: Singleton, C5 <: Singleton, C6 <: Singleton, C7 <: Singleton, C8 <: Singleton, C9 <: Singleton, C10 <: Singleton, C11 <: Singleton, C12 <: Singleton, C13 <: Singleton, C14 <: Singleton, C15 <: Singleton, C16 <: Singleton, C17 <: Singleton, C18 <: Singleton, C19 <: Singleton, C20 <: Singleton, C21 <: Singleton, C22 <: Singleton, C23 <: Singleton, C24 <: Singleton, C25 <: Singleton, C26 <: Singleton, C27 <: Singleton, C28 <: Singleton, C29 <: Singleton, C30 <: Singleton, C31 <: Singleton, C32 <: Singleton, C33 <: Singleton, C34 <: Singleton, C35 <: Singleton, C36 <: Singleton, C37 <: Singleton, C38 <: Singleton, C39 <: Singleton, X](c1: C1, c2: C2, c3: C3, c4: C4, c5: C5, c6: C6, c7: C7, c8: C8, c9: C9, c10: C10, c11: C11, c12: C12, c13: C13, c14: C14, c15: C15, c16: C16, c17: C17, c18: C18, c19: C19, c20: C20, c21: C21, c22: C22, c23: C23, c24: C24, c25: C25, c26: C26, c27: C27, c28: C28, c29: C29, c30: C30, c31: C31, c32: C32, c33: C33, c34: C34, c35: C35, c36: C36, c37: C37, c38: C38, c39: C39)(using finder: FindAll[TableColumns, (C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27, C28, C29, C30, C31, C32, C33, C34, C35, C36, C37, C38, C39), X]): Select[Keyspace, TableName, TableColumns, X, Where] = Select(table, finder.get(table.*), where, allowFiltering)
  def take[C1 <: Singleton, C2 <: Singleton, C3 <: Singleton, C4 <: Singleton, C5 <: Singleton, C6 <: Singleton, C7 <: Singleton, C8 <: Singleton, C9 <: Singleton, C10 <: Singleton, C11 <: Singleton, C12 <: Singleton, C13 <: Singleton, C14 <: Singleton, C15 <: Singleton, C16 <: Singleton, C17 <: Singleton, C18 <: Singleton, C19 <: Singleton, C20 <: Singleton, C21 <: Singleton, C22 <: Singleton, C23 <: Singleton, C24 <: Singleton, C25 <: Singleton, C26 <: Singleton, C27 <: Singleton, C28 <: Singleton, C29 <: Singleton, C30 <: Singleton, C31 <: Singleton, C32 <: Singleton, C33 <: Singleton, C34 <: Singleton, C35 <: Singleton, C36 <: Singleton, C37 <: Singleton, C38 <: Singleton, C39 <: Singleton, C40 <: Singleton, X](c1: C1, c2: C2, c3: C3, c4: C4, c5: C5, c6: C6, c7: C7, c8: C8, c9: C9, c10: C10, c11: C11, c12: C12, c13: C13, c14: C14, c15: C15, c16: C16, c17: C17, c18: C18, c19: C19, c20: C20, c21: C21, c22: C22, c23: C23, c24: C24, c25: C25, c26: C26, c27: C27, c28: C28, c29: C29, c30: C30, c31: C31, c32: C32, c33: C33, c34: C34, c35: C35, c36: C36, c37: C37, c38: C38, c39: C39, c40: C40)(using finder: FindAll[TableColumns, (C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27, C28, C29, C30, C31, C32, C33, C34, C35, C36, C37, C38, C39, C40), X]): Select[Keyspace, TableName, TableColumns, X, Where] = Select(table, finder.get(table.*), where, allowFiltering)
  def take[C1 <: Singleton, C2 <: Singleton, C3 <: Singleton, C4 <: Singleton, C5 <: Singleton, C6 <: Singleton, C7 <: Singleton, C8 <: Singleton, C9 <: Singleton, C10 <: Singleton, C11 <: Singleton, C12 <: Singleton, C13 <: Singleton, C14 <: Singleton, C15 <: Singleton, C16 <: Singleton, C17 <: Singleton, C18 <: Singleton, C19 <: Singleton, C20 <: Singleton, C21 <: Singleton, C22 <: Singleton, C23 <: Singleton, C24 <: Singleton, C25 <: Singleton, C26 <: Singleton, C27 <: Singleton, C28 <: Singleton, C29 <: Singleton, C30 <: Singleton, C31 <: Singleton, C32 <: Singleton, C33 <: Singleton, C34 <: Singleton, C35 <: Singleton, C36 <: Singleton, C37 <: Singleton, C38 <: Singleton, C39 <: Singleton, C40 <: Singleton, C41 <: Singleton, X](c1: C1, c2: C2, c3: C3, c4: C4, c5: C5, c6: C6, c7: C7, c8: C8, c9: C9, c10: C10, c11: C11, c12: C12, c13: C13, c14: C14, c15: C15, c16: C16, c17: C17, c18: C18, c19: C19, c20: C20, c21: C21, c22: C22, c23: C23, c24: C24, c25: C25, c26: C26, c27: C27, c28: C28, c29: C29, c30: C30, c31: C31, c32: C32, c33: C33, c34: C34, c35: C35, c36: C36, c37: C37, c38: C38, c39: C39, c40: C40, c41: C41)(using finder: FindAll[TableColumns, (C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27, C28, C29, C30, C31, C32, C33, C34, C35, C36, C37, C38, C39, C40, C41), X]): Select[Keyspace, TableName, TableColumns, X, Where] = Select(table, finder.get(table.*), where, allowFiltering)
  def take[C1 <: Singleton, C2 <: Singleton, C3 <: Singleton, C4 <: Singleton, C5 <: Singleton, C6 <: Singleton, C7 <: Singleton, C8 <: Singleton, C9 <: Singleton, C10 <: Singleton, C11 <: Singleton, C12 <: Singleton, C13 <: Singleton, C14 <: Singleton, C15 <: Singleton, C16 <: Singleton, C17 <: Singleton, C18 <: Singleton, C19 <: Singleton, C20 <: Singleton, C21 <: Singleton, C22 <: Singleton, C23 <: Singleton, C24 <: Singleton, C25 <: Singleton, C26 <: Singleton, C27 <: Singleton, C28 <: Singleton, C29 <: Singleton, C30 <: Singleton, C31 <: Singleton, C32 <: Singleton, C33 <: Singleton, C34 <: Singleton, C35 <: Singleton, C36 <: Singleton, C37 <: Singleton, C38 <: Singleton, C39 <: Singleton, C40 <: Singleton, C41 <: Singleton, C42 <: Singleton, X](c1: C1, c2: C2, c3: C3, c4: C4, c5: C5, c6: C6, c7: C7, c8: C8, c9: C9, c10: C10, c11: C11, c12: C12, c13: C13, c14: C14, c15: C15, c16: C16, c17: C17, c18: C18, c19: C19, c20: C20, c21: C21, c22: C22, c23: C23, c24: C24, c25: C25, c26: C26, c27: C27, c28: C28, c29: C29, c30: C30, c31: C31, c32: C32, c33: C33, c34: C34, c35: C35, c36: C36, c37: C37, c38: C38, c39: C39, c40: C40, c41: C41, c42: C42)(using finder: FindAll[TableColumns, (C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27, C28, C29, C30, C31, C32, C33, C34, C35, C36, C37, C38, C39, C40, C41, C42), X]): Select[Keyspace, TableName, TableColumns, X, Where] = Select(table, finder.get(table.*), where, allowFiltering)
  def take[C1 <: Singleton, C2 <: Singleton, C3 <: Singleton, C4 <: Singleton, C5 <: Singleton, C6 <: Singleton, C7 <: Singleton, C8 <: Singleton, C9 <: Singleton, C10 <: Singleton, C11 <: Singleton, C12 <: Singleton, C13 <: Singleton, C14 <: Singleton, C15 <: Singleton, C16 <: Singleton, C17 <: Singleton, C18 <: Singleton, C19 <: Singleton, C20 <: Singleton, C21 <: Singleton, C22 <: Singleton, C23 <: Singleton, C24 <: Singleton, C25 <: Singleton, C26 <: Singleton, C27 <: Singleton, C28 <: Singleton, C29 <: Singleton, C30 <: Singleton, C31 <: Singleton, C32 <: Singleton, C33 <: Singleton, C34 <: Singleton, C35 <: Singleton, C36 <: Singleton, C37 <: Singleton, C38 <: Singleton, C39 <: Singleton, C40 <: Singleton, C41 <: Singleton, C42 <: Singleton, C43 <: Singleton, X](c1: C1, c2: C2, c3: C3, c4: C4, c5: C5, c6: C6, c7: C7, c8: C8, c9: C9, c10: C10, c11: C11, c12: C12, c13: C13, c14: C14, c15: C15, c16: C16, c17: C17, c18: C18, c19: C19, c20: C20, c21: C21, c22: C22, c23: C23, c24: C24, c25: C25, c26: C26, c27: C27, c28: C28, c29: C29, c30: C30, c31: C31, c32: C32, c33: C33, c34: C34, c35: C35, c36: C36, c37: C37, c38: C38, c39: C39, c40: C40, c41: C41, c42: C42, c43: C43)(using finder: FindAll[TableColumns, (C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27, C28, C29, C30, C31, C32, C33, C34, C35, C36, C37, C38, C39, C40, C41, C42, C43), X]): Select[Keyspace, TableName, TableColumns, X, Where] = Select(table, finder.get(table.*), where, allowFiltering)
  def take[C1 <: Singleton, C2 <: Singleton, C3 <: Singleton, C4 <: Singleton, C5 <: Singleton, C6 <: Singleton, C7 <: Singleton, C8 <: Singleton, C9 <: Singleton, C10 <: Singleton, C11 <: Singleton, C12 <: Singleton, C13 <: Singleton, C14 <: Singleton, C15 <: Singleton, C16 <: Singleton, C17 <: Singleton, C18 <: Singleton, C19 <: Singleton, C20 <: Singleton, C21 <: Singleton, C22 <: Singleton, C23 <: Singleton, C24 <: Singleton, C25 <: Singleton, C26 <: Singleton, C27 <: Singleton, C28 <: Singleton, C29 <: Singleton, C30 <: Singleton, C31 <: Singleton, C32 <: Singleton, C33 <: Singleton, C34 <: Singleton, C35 <: Singleton, C36 <: Singleton, C37 <: Singleton, C38 <: Singleton, C39 <: Singleton, C40 <: Singleton, C41 <: Singleton, C42 <: Singleton, C43 <: Singleton, C44 <: Singleton, X](c1: C1, c2: C2, c3: C3, c4: C4, c5: C5, c6: C6, c7: C7, c8: C8, c9: C9, c10: C10, c11: C11, c12: C12, c13: C13, c14: C14, c15: C15, c16: C16, c17: C17, c18: C18, c19: C19, c20: C20, c21: C21, c22: C22, c23: C23, c24: C24, c25: C25, c26: C26, c27: C27, c28: C28, c29: C29, c30: C30, c31: C31, c32: C32, c33: C33, c34: C34, c35: C35, c36: C36, c37: C37, c38: C38, c39: C39, c40: C40, c41: C41, c42: C42, c43: C43, c44: C44)(using finder: FindAll[TableColumns, (C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13, C14, C15, C16, C17, C18, C19, C20, C21, C22, C23, C24, C25, C26, C27, C28, C29, C30, C31, C32, C33, C34, C35, C36, C37, C38, C39, C40, C41, C42, C43, C44), X]): Select[Keyspace, TableName, TableColumns, X, Where] = Select(table, finder.get(table.*), where, allowFiltering)


object Select:
  def from[Keyspace, TableName, TableColumns](table: Table[Keyspace, TableName, TableColumns]): Select[Keyspace, TableName, TableColumns, EmptyTuple, AlwaysTrue] =
    Select(table, EmptyTuple, AlwaysTrue, allowFiltering = false)
